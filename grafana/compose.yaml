services:
  grafana:
    image: docker.io/grafana/grafana-oss
    container_name: grafana
    hostname: grafana
    user: "1000"
    labels:
      diun.enable: true
      diun.watch_repos: true
      traefik.enable: true
      traefik.http.routers.gafana.tls: true
      traefik.http.routers.gafana.tls.certresolver: production
      traefik.http.routers.gafana.middlewares: authentik@docker
      traefik.http.routers.gafana.entrypoints: web, websecure
      traefik.http.routers.gafana.rule: Host(`monitoring.${PERSONAL_DOMAINE_NAME}`)
      traefik.http.routers.gafana.service: gafana
      traefik.http.services.gafana.loadBalancer.server.port: 3000
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Paris
      GF_SERVER_ROOT_URL: "https://monitoring.${PERSONAL_DOMAINE_NAME}"
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "Authentik - ${PERSONAL_DOMAINE_NAME}"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "${GF_AUTH_GENERIC_OAUTH_CLIENT_ID}"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "${GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET}"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.${PERSONAL_DOMAINE_NAME}/application/o/authorize/"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.${PERSONAL_DOMAINE_NAME}/application/o/token/"
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.${PERSONAL_DOMAINE_NAME}/application/o/userinfo/"
      GF_AUTH_SIGNOUT_REDIRECT_URL: "https://auth.${PERSONAL_DOMAINE_NAME}/application/o/grafana/end-session/"
      # Optionally enable auto-login (bypasses Grafana login screen)
      GF_AUTH_OAUTH_AUTO_LOGIN: ${GF_AUTH_OAUTH_AUTO_LOGIN}
    volumes:
      - /${DOCKER_DATA_DIRECTORY}/repos/home-docker/timezone:/etc/timezone:ro
      - /${DOCKER_DATA_DIRECTORY}/docker/docker-data/grafana:/var/lib/grafana
    expose:
      - 3000
    networks:
      - grafana
      - webinternal

  cadvisor:
    restart: unless-stopped
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    hostname: cadvisor
    privileged: true
    labels:
      diun.enable: true
      diun.watch_repos: true
    environment:
      TZ: Europe/Paris
    volumes:
      - /${DOCKER_DATA_DIRECTORY}/repos/home-docker/timezone:/etc/timezone:ro
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /${DOCKER_DATA_DIRECTORY}/docker/docker-config:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    expose:
      - 8080
    networks:
      - grafana

  prometheus:
    restart: unless-stopped
    image: docker.io/prom/prometheus
    container_name: prometheus
    hostname: prometheus
    labels:
      diun.enable: true
      diun.watch_repos: true
    environment:
      TZ: Europe/Paris
    volumes:
      - /${DOCKER_DATA_DIRECTORY}/repos/home-docker/timezone:/etc/timezone:ro
      - /${DOCKER_DATA_DIRECTORY}/repos/home-docker/grafana/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    command: --config.file=/etc/prometheus/prometheus.yaml
    networks:
      - grafana

  node_exporter:
    restart: unless-stopped
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    hostname: node_exporter
    pid: host
    labels:
      diun.enable: true
      diun.watch_repos: true
    environment:
      TZ: Europe/Paris
    volumes:
      - /:/host:ro,rslave
    command: --path.rootfs=/host
    expose:
      - 9100
    networks:
      - grafana

# Not used
  # influxdb:
  #   restart: unless-stopped
  #   image: docker.io/library/influxdb:2.7.10-alpine
  #   container_name: influxdb
  #   hostname: influxdb
  #   labels:
  #     diun.enable: true
  #     diun.watch_repos: true
  #     # - traefik.enable=true
  #     # - traefik.http.services.influxdb.loadbalancer.server.port=8086
  #     # - traefik.http.services.influxdb.loadbalancer.server.scheme=https
  #     # - traefik.http.routers.influxdb-https.entrypoints=websecure
  #     # - traefik.http.routers.influxdb-https.rule=Host(`your-server-url`)
  #     # - traefik.http.routers.influxdb-https.tls=true
  #     # - traefik.http.routers.influxdb-https.tls.certresolver=your-certresolver
  #   environment:
  #     TZ: Europe/Paris
  #     # DOCKER_INFLUXDB_INIT_MODE: setup #Only on first start
  #     DOCKER_INFLUXDB_INIT_USERNAME: ${PERSONAL_INFLUXDB_USER}
  #     DOCKER_INFLUXDB_INIT_PASSWORD: ${PERSONAL_INFLUXDB_PWD}
  #     DOCKER_INFLUXDB_INIT_ORG: ${PERSONAL_INFLUXDB_ORG}
  #     DOCKER_INFLUXDB_INIT_BUCKET: ${PERSONAL_INFLUXDB_BUCKET}
  #   # (Optional) change retention time
  #   #   - DOCKER_INFLUXDB_INIT_RETENTION=1w  # (optional) configure data retention 1 week
  #   # (Optional) add admin token
  #   #   - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token  # (optional) set admin token
  #   ports:
  #     - 8086:8086
  #   volumes:
  #     - /${DOCKER_DATA_DIRECTORY}/repos/home-docker/timezone:/etc/timezone:ro
  #     - influxdb-data:/var/lib/influxdb2
  #     - /etc/influxdb2:/etc/influxdb2
  #   networks:
  #     - grafana

volumes:
  # influxdb-data: 
  prometheus-data:

networks:
  grafana:
    name: grafana
  webinternal:
    name: webinternal
  