services:
  grafana:
    image: docker.io/grafana/grafana-oss
    container_name: grafana
    hostname: grafana
    user: "${PERSONAL_GRAFANA_UID:-0}:${PERSONAL_GRAFANA_GID:-0}"
    labels:
      diun.enable: true
      diun.watch_repos: true
      traefik.enable: true
      traefik.http.routers.gafana.tls: true
      traefik.http.routers.gafana.middlewares: authentik@docker
      traefik.http.routers.gafana.entrypoints: websecure
      traefik.http.routers.gafana.rule: Host(`monitoring.${PERSONAL_DOMAINE_NAME}`)
      traefik.http.routers.gafana.service: gafana
      traefik.http.services.gafana.loadBalancer.server.port: 3000
    environment:
      PUID: 1000
      PGID: 100
      TZ: Europe/Paris
      GF_SERVER_ROOT_URL: "https://monitoring.${PERSONAL_DOMAINE_NAME}"
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "Authentik - ${PERSONAL_DOMAINE_NAME}"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "${GF_AUTH_GENERIC_OAUTH_CLIENT_ID}"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "${GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET}"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email groups"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.${PERSONAL_DOMAINE_NAME}/application/o/authorize/"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.${PERSONAL_DOMAINE_NAME}/application/o/token/"
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.${PERSONAL_DOMAINE_NAME}/application/o/userinfo/"
      GF_AUTH_SIGNOUT_REDIRECT_URL: "https://auth.${PERSONAL_DOMAINE_NAME}/application/o/grafana/end-session/"
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups, 'admin') && 'Admin' || 'Viewer'"
      # Optionally enable auto-login (bypasses Grafana login screen)
      GF_AUTH_OAUTH_AUTO_LOGIN: ${GF_AUTH_OAUTH_AUTO_LOGIN}
    volumes:
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/repos/home-docker/timezone:/etc/timezone:ro
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/docker/docker-data/grafana/data:/var/lib/grafana
    expose:
      - 3000
    networks:
      - webinternal

  prometheus:
    restart: unless-stopped
    image: docker.io/prom/prometheus
    container_name: prometheus
    hostname: prometheus
    user: "${PERSONAL_GRAFANA_UID:-0}:${PERSONAL_GRAFANA_GID:-0}"
    labels:
      diun.enable: true
      diun.watch_repos: true
      traefik.enable: true
      traefik.http.routers.prometheusdb.tls: true
      traefik.http.routers.prometheusdb.middlewares: authentik@docker
      traefik.http.routers.prometheusdb.entrypoints: websecure
      traefik.http.routers.prometheusdb.rule: Host(`prometheus.${PERSONAL_DOMAINE_NAME}`)
      traefik.http.routers.prometheusdb.service: prometheusdb
      traefik.http.services.prometheusdb.loadBalancer.server.port: 9090
    environment:
      TZ: Europe/Paris
      PUID: 1000
      PGID: 100
    volumes:
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/repos/home-docker/timezone:/etc/timezone:ro
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/repos/home-docker/grafana/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/docker/docker-data/grafana/prometheus:/prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    command: 
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=${PERSONAL_METRICS_RETENTION_TIME}"
    networks:
      - prometheus
      - webinternal

  cadvisor:
    restart: unless-stopped
    image: gcr.io/cadvisor/cadvisor # google registry
    container_name: cadvisor
    hostname: cadvisor
    privileged: true
    labels:
      diun.enable: true
      diun.watch_repos: true
    environment:
      TZ: Europe/Paris
    volumes:
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/repos/home-docker/timezone:/etc/timezone:ro
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/docker/docker-config:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    expose:
      - 8080
    networks:
      - prometheus

  node_exporter:
    restart: unless-stopped
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    hostname: node_exporter
    pid: host
    labels:
      diun.enable: true
      diun.watch_repos: true
    environment:
      TZ: Europe/Paris
    volumes:
      - /:/host:ro,rslave
    command: --path.rootfs=/host
    expose:
      - 9100
    networks:
      - prometheus

  influxdb:
    restart: unless-stopped
    image: docker.io/library/influxdb:2.7.10-alpine
    container_name: influxdb2
    hostname: influxdb2
    labels:
      diun.enable: true
      diun.watch_repos: true
      traefik.enable: true
      traefik.http.routers.influxdb2.tls: true
      traefik.http.routers.influxdb2.middlewares: authentik@docker
      traefik.http.routers.influxdb2.entrypoints: websecure
      traefik.http.routers.influxdb2.rule: Host(`influxdb2.${PERSONAL_DOMAINE_NAME}`)
      traefik.http.routers.influxdb2.service: influxdb2
      traefik.http.services.influxdb2.loadbalancer.server.port: 8086
    environment:
      TZ: Europe/Paris
    # (Optional) change retention time
      DOCKER_INFLUXDB_INIT_RETENTION: ${PERSONAL_METRICS_RETENTION_TIME}  # (optional) configure data retention 1 week
    # (Optional) add admin token
      # DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${PERSONAL_INFLUXDB_ADMIN_TOKEN}  # (optional) set admin token
    ports:
      - 8086:8086
    volumes:
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/repos/home-docker/timezone:/etc/timezone:ro
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/docker/docker-data/grafana/influxdb2/data:/var/lib/influxdb2
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/docker/docker-data/grafana/influxdb2/etc:/etc/influxdb2
    networks:
      - prometheus
      - webinternal

networks:
  prometheus:
    name: prometheus
  webinternal:
    name: webinternal
  