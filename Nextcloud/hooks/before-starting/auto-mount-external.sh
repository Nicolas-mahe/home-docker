#!/bin/sh
set -e

echo "üì¶ Activation de l‚Äôapp files_external (si non active)..."
php occ app:enable files_external || true

# Groupe autoris√©
ALLOWED_GROUP="${NEXTCLOUD_EXTERNAL_GROUP:-admin}"

# Fonction pour r√©cup√©rer l'ID d'un montage par son label
get_storage_id() {
  LABEL="$1"
  php occ files_external:list --output=json \
    | php -r '
        $label = "/" . $argv[1];
        $json = json_decode(stream_get_contents(STDIN), true);
        foreach ($json as $mount) {
            if (isset($mount["mount_point"]) && $mount["mount_point"] === $label) {
                echo $mount["mount_id"];
                exit;
            }
        }' "$LABEL"
}

# Parcours tous les sous-dossiers dans /mnt
for DIR in /mnt/*; do
  if [ -d "$DIR" ]; then
    LABEL=$(basename "$DIR")
    echo "üîç Traitement du dossier : $LABEL"

    # V√©rifie si le stockage existe d√©j√†
    if php occ files_external:list | grep -q "/$LABEL"; then
      echo "‚ÑπÔ∏è Le stockage externe '$LABEL' existe d√©j√†."
    else
      echo "‚ûï Ajout du stockage externe '$LABEL'..."
      php occ files_external:create "/$LABEL" local null::null -c datadir="$DIR"

      # R√©cup√®re l'ID
      STORAGE_ID=$(get_storage_id "$LABEL")
      echo "üîç L'ID du stockage '$LABEL' est le $STORAGE_ID"

      if [ -n "$STORAGE_ID" ]; then
        echo "üë• Restriction du stockage '$LABEL' (ID=$STORAGE_ID) au groupe '$ALLOWED_GROUP'..."
        php occ files_external:applicable --add-group="$ALLOWED_GROUP" "$STORAGE_ID"
      else
        echo "‚ö†Ô∏è Impossible de r√©cup√©rer l'ID du stockage '$LABEL'."
      fi
    fi
  fi
done

echo "‚úÖ Tous les stockages externes sont configur√©s."
