# yamllint disable rule:comments-indentation
---
###############################################################################
##                           Authelia Configuration                          ##
###############################################################################

##
## Notes:
##
##    - the default location of this file is assumed to be configuration.yml unless otherwise noted
##    - when using docker the container expects this by default to be at /config/configuration.yml
##    - the default location where this file is loaded from can be overridden with the X_AUTHELIA_CONFIG environment var
##    - the comments in this configuration file are helpful but users should consult the official documentation on the
##      website at https://www.authelia.com/ or https://www.authelia.com/configuration/prologue/introduction/
##    - this configuration file template is not automatically updated
##

## Certificates directory specifies where Authelia will load trusted certificates (public portion) from in addition to
## the system certificates store.
## They should be in base64 format, and have one of the following extensions: *.cer, *.crt, *.pem.
# certificates_directory: '/config/certificates/'

# The theme to display: light, dark, grey, auto.
theme: 'auto'

# Set the default 2FA method for new users and for when a user has a preferred method configured that has been
# disabled. This setting must be a method that is enabled.
# Options are totp, webauthn, mobile_push.
default_2fa_method: 'totp'

#
# Server Configuration
#
server:
  # The address for the Main server to listen on in the address common syntax.
  # Formats:
  #  - [<scheme>://]<hostname>[:<port>][/<path>]
  #  - [<scheme>://][hostname]:<port>[/<path>]
  # Square brackets indicate optional portions of the format. Scheme must be 'tcp', 'tcp4', 'tcp6', 'unix', or 'fd'.
  # The default scheme is 'unix' if the address is an absolute path otherwise it's 'tcp'. The default port is '9091'.
  # If the path is specified this configures the router to handle both the `/` path and the configured path.
  address: 'tcp://:9091'

  # Disables writing the health check vars to /app/.healthcheck.env which makes healthcheck.sh return exit code 0.
  # This is disabled by default if either /app/.healthcheck.env or /app/healthcheck.sh do not exist.
  disable_healthcheck: false

#
# Log Configuration
#
log:
  # Level of verbosity for logs: info, debug, trace.
  level: 'info'

  # Format the logs are written as: json, text.
  format: 'json'

  # Whether to also log to stdout when a log_file_path is defined.
  keep_stdout: true

##
## Telemetry Configuration
##
# telemetry:

  ##
  ## Metrics Configuration
  ##
  # metrics:
    ## Enable Metrics.
    # enabled: false

    ## The address for the Metrics server to listen on in the address common syntax.
    ## Formats:
    ##  - [<scheme>://]<hostname>[:<port>][/<path>]
    ##  - [<scheme>://][hostname]:<port>[/<path>]
    ## Square brackets indicate optional portions of the format. Scheme must be 'tcp', 'tcp4', 'tcp6', 'unix', or 'fd'.
    ## The default scheme is 'unix' if the address is an absolute path otherwise it's 'tcp'. The default port is '9959'.
    ## If the path is not specified it defaults to `/metrics`.
    # address: 'tcp://:9959/metrics'

    ## Metrics Server Buffers configuration.
    # buffers:

      ## Read buffer.
      # read: 4096

      ## Write buffer.
      # write: 4096

    ## Metrics Server Timeouts configuration.
    # timeouts:

      ## Read timeout in the duration common syntax.
      # read: '6 seconds'

      ## Write timeout in the duration common syntax.
      # write: '6 seconds'

      ## Idle timeout in the duration common syntax.
      # idle: '30 seconds'

#
# TOTP Configuration
#
# Parameters used for TOTP generation.
totp:
  # Disable TOTP.
  disable: false

  # The issuer name displayed in the Authenticator application of your choice.
  issuer: 'Authelia | ${PERSONAL_DOMAINE_NAME}'

  # The TOTP algorithm to use.
  # It is CRITICAL you read the documentation before changing this option:
  # https://www.authelia.com/c/totp#algorithm
  algorithm: 'SHA1'

  # # The number of digits a user has to input. Must either be 6 or 8.
  # # Changing this option only affects newly generated TOTP configurations.
  # # It is CRITICAL you read the documentation before changing this option:
  # # https://www.authelia.com/c/totp#digits
  # digits: 6


  # The allowed digits for a user to pick from.
  allowed_digits:
  - 8
  - 6

#
# WebAuthn Configuration
#
# Parameters used for WebAuthn.
webauthn:
  # Disable WebAuthn.
  disable: false

  # Enables logins via a Passkey.
  enable_passkey_login: false

  # The display name the browser should show the user for when using WebAuthn to login/register.
  display_name: 'Authelia | ${PERSONAL_DOMAINE_NAME}'

  # Conveyance preference controls if we collect the attestation statement including the AAGUID from the device.
  # Options are none, indirect, direct.
  attestation_conveyance_preference: 'indirect'

  # The interaction timeout for WebAuthn dialogues in the duration common syntax.
  timeout: '60 seconds'

#
# Duo Push API Configuration
#
# Parameters used to contact the Duo API. Those are generated when you protect an application of type
# "Partner Auth API" in the management panel.
duo_api:
  disable: true

#
# Identity Validation Configuration
#
# This configuration tunes the identity validation flows.
identity_validation:

  # Reset Password flow. Adjusts how the reset password flow operates.
  reset_password:
    # Maximum allowed time before the JWT is generated and when the user uses it in the duration common syntax.
    jwt_lifespan: '10 minutes'

    ## The secret key used to sign and verify the JWT.
    jwt_secret: '' # docker-secret

#
# Definitions
#
# The definitions are used in other areas as reference points to reduce duplication.
#
definitions:
  # The network definitions.
  network:
    # The name of the definition followed by the list of CIDR network addresses in this definition.
    internal:
      - '${PERSONAL_NETWORK}.0/24'
    # VPN:
    #   - '10.9.0.0/16'

#
# Authentication Backend Provider Configuration
#
# Used for verifying user passwords and retrieve information such as email address and groups users belong to.
#
# The available providers are: `file`, `ldap`. You must use only one of these providers.
authentication_backend:
  # Password Change Options.
  password_change:
    # Disable both the HTML element and the API for password change functionality.
    disable: false
  # Password Reset Options.
  password_reset:
    # Disable both the HTML element and the API for reset password functionality.
    disable: false

    # External reset password url that redirects the user to an external reset portal. This disables the internal reset
    # functionality.
    custom_url: ''

  # The amount of time to wait before we refresh data from the authentication backend in the duration common syntax.
  # To disable this feature set it to 'disable', this will slightly reduce security because for Authelia, users will
  # always belong to groups they belonged to at the time of login even if they have been removed from them in LDAP.
  # To force update on every request you can set this to '0' or 'always', this will increase processor demand.
  # See the below documentation for more information.
  # Refresh Interval docs: https://www.authelia.com/c/1fa#refresh-interval
  refresh_interval: 'always'


  #
  # File (Authentication Provider)
  #
  # With this backend, the users database is stored in a file which is updated when users reset their passwords.
  # Therefore, this backend is meant to be used in a dev environment and not in production since it prevents Authelia
  # to be scaled to more than one instance. The options under 'password' have sane defaults, and as it has security
  # implications it is highly recommended you leave the default values. Before considering changing these settings
  # please read the docs page below:
  # https://www.authelia.com/r/passwords#tuning
  #
  # Important: Kubernetes (or HA) users must read https://www.authelia.com/t/statelessness
  #
  file:
    path: '/config/users_database.yml'
    watch: true
    search:
      email: false
      case_insensitive: false
    password:
      algorithm: 'argon2'
      argon2:
        variant: 'argon2id'
        iterations: 3
        memory: 65536
        parallelism: 4
        key_length: 32
        salt_length: 16
      scrypt:
        iterations: 16
        block_size: 8
        parallelism: 1
        key_length: 32
        salt_length: 16
      pbkdf2:
        variant: 'sha512'
        iterations: 310000
        salt_length: 16
      sha2crypt:
        variant: 'sha512'
        iterations: 50000
        salt_length: 16
      bcrypt:
        variant: 'standard'
        cost: 12

#
# Password Policy Configuration.
#
password_policy:

  # The standard policy allows you to tune individual settings manually.
  standard:
    enabled: true

    # Require a minimum length for passwords.
    min_length: 12

    # Require a maximum length for passwords.
    max_length: 0

    # Require uppercase characters.
    require_uppercase: true

    # Require lowercase characters.
    require_lowercase: true

    # Require numeric characters.
    require_number: true

    # Require special characters.
    require_special: true

  # zxcvbn is a well known and used password strength algorithm. It does not have tunable settings.
  zxcvbn:
    enabled: false

#
# Privacy Policy Configuration
#
# Parameters used for displaying the privacy policy link and drawer.
privacy_policy:

  # Enables the display of the privacy policy using the policy_url.
  enabled: false

#
# Session Provider Configuration
#
# The session cookies identify the user once logged in.
# The available providers are: `memory`, `redis`. Memory is the provider unless redis is defined.
session:
  # The secret to encrypt the session data. This is only used with Redis / Redis Sentinel.
  # Secret can also be set using a secret: https://www.authelia.com/c/secrets
  secret: '' # docker-secret

  # Cookies configures the list of allowed cookie domains for sessions to be created on.
  # Undefined values will default to the values below.
  cookies:
    -
      # The name of the session cookie.
      name: 'auth_session'

      # The domain to protect.
      # Note: the Authelia portal must also be in that domain.
      domain: '${PERSONAL_DOMAINE_NAME}'

      # Required. The fully qualified URI of the portal to redirect users to on proxies that support redirections.
      # Rules:
      #   - MUST use the secure scheme 'https://'
      #   - The above 'domain' option MUST either:
      #      - Match the host portion of this URI.
      #      - Match the suffix of the host portion when prefixed with '.'.
      authelia_url: 'https://auth.${PERSONAL_DOMAINE_NAME}'

      # Optional. The fully qualified URI used as the redirection location if the portal is accessed directly. Not
      # configuring this option disables the automatic redirection behaviour.
      #
      # Note: this parameter is optional. If not provided, user won't be redirected upon successful authentication
      # unless they were redirected to Authelia by the proxy.
      #
      # Rules:
      #   - MUST use the secure scheme 'https://'
      #   - MUST not match the 'authelia_url' option.
      #   - The above 'domain' option MUST either:
      #      - Match the host portion of this URI.
      #      - Match the suffix of the host portion when prefixed with '.'.
      default_redirection_url: 'https://www.${PERSONAL_DOMAINE_NAME}'

      # Sets the Cookie SameSite value. Possible options are none, lax, or strict.
      # Please read https://www.authelia.com/c/session#same_site
      same_site: 'lax'

      # The value for inactivity, expiration, and remember_me are in seconds or the duration common syntax.
      # All three of these values affect the cookie/session validity period. Longer periods are considered less secure
      # because a stolen cookie will last longer giving attackers more time to spy or attack.

      # The inactivity time before the session is reset. If expiration is set to 1h, and this is set to 5m, if the user
      # does not select the remember me option their session will get destroyed after 1h, or after 5m since the last
      # time Authelia detected user activity.
      inactivity: '15 minutes'

      # The time before the session cookie expires and the session is destroyed if remember me IS NOT selected by the
      # user.
      expiration: '1 hour'

      # The time before the cookie expires and the session is destroyed if remember me IS selected by the user. Setting
      # this value to -1 disables remember me for this session cookie domain. If allowed and the user uses the remember
      # me checkbox this overrides the expiration option and disables the inactivity option.
      remember_me: '1 month'

  #
  # Redis Provider
  #
  # Important: Kubernetes (or HA) users must read https://www.authelia.com/t/statelessness
  #
  redis:
    host: 'redis-authelia'
    port: 6379

    # The connection timeout in the duration common syntax.
    timeout: '5 seconds'

    # The maximum number of retries on a failed command. Set it to 0 to disable retries.
    max_retries: 3

    # Username used for redis authentication. This is optional and a new feature in redis 6.0.
    # username: 'authelia'

    # Password can also be set using a secret: https://www.authelia.com/c/secrets
    password: 'authelia'

    # This is the Redis DB Index https://redis.io/commands/select (sometimes referred to as database number, DB, etc).
    database_index: 0

    # The maximum number of concurrent active connections to Redis.
    maximum_active_connections: 8

    # The target number of idle connections to have open ready for work. Useful when opening connections is slow.
    minimum_idle_connections: 0

    # # The Redis TLS configuration. If defined will require a TLS connection to the Redis instance(s).
    # tls:
    #   # The server subject name to check the servers certificate against during the validation process.
    #   # This option is not required if the certificate has a SAN which matches the host option.
    #   server_name: 'myredis.${PERSONAL_DOMAINE_NAME}'

    #   # Skip verifying the server certificate entirely. In preference to setting this we strongly recommend you add the
    #   # certificate or the certificate of the authority signing the certificate to the certificates directory which is
    #   # defined by the `certificates_directory` option at the top of the configuration.
    #   # It's important to note the public key should be added to the directory, not the private key.
    #   # This option is strongly discouraged but may be useful in some self-signed situations where validation is not
    #   # important to the administrator.
    #   skip_verify: false

    #   # Minimum TLS version for the connection.
    #   minimum_version: 'TLS1.2'

    #   # Maximum TLS version for the connection.
    #   maximum_version: 'TLS1.3'

    #   # The certificate chain used with the private_key if the server requests TLS Client Authentication
    #   # i.e. Mutual TLS.
    #   certificate_chain: |
    #     -----BEGIN CERTIFICATE-----
    #     ...
    #     -----END CERTIFICATE-----
    #     -----BEGIN CERTIFICATE-----
    #     ...
    #     -----END CERTIFICATE-----

    #   # The private key used with the certificate_chain if the server requests TLS Client Authentication
    #   # i.e. Mutual TLS.
    #   private_key: |
    #     -----BEGIN RSA PRIVATE KEY-----
    #     ...
    #     -----END RSA PRIVATE KEY-----

    # # The Redis HA configuration options.
    # # This provides specific options to Redis Sentinel, sentinel_name must be defined (Master Name).
    # high_availability:
    #   # Sentinel Name / Master Name.
    #   sentinel_name: 'mysentinel'

    #   # Specific username for Redis Sentinel. The node username and password is configured above.
    #   sentinel_username: 'sentinel_specific_user'

    #   # Specific password for Redis Sentinel. The node username and password is configured above.
    #   sentinel_password: 'sentinel_specific_pass'

    #   # The additional nodes to pre-seed the redis provider with (for sentinel).
    #   # If the host in the above section is defined, it will be combined with this list to connect to sentinel.
    #   # For high availability to be used you must have either defined; the host above or at least one node below.
    #   nodes:
    #     - host: 'sentinel-node1'
    #       port: 6379
    #     - host: 'sentinel-node2'
    #       port: 6379

    #   # Choose the host with the lowest latency.
    #   route_by_latency: false

    #   # Choose the host randomly.
    #   route_randomly: false

#
# Regulation Configuration
#
# This mechanism prevents attackers from brute forcing the first factor. It bans the user if too many attempts are made
# in a short period of time.
regulation:
  # Regulation Mode.
  modes:
    - 'user'
    - 'ip'

  # The number of failed login attempts before user is banned. Set it to 0 to disable regulation.
  max_retries: 5

  # The time range during which the user can attempt login before being banned in the duration common syntax. The user
  # is banned if the authentication failed 'max_retries' times in a 'find_time' seconds window.
  find_time: '2 minutes'

  # The length of time before a banned user can login again in the duration common syntax.
  ban_time: '1 hour'

#
# Storage Provider Configuration
#
# The available providers are: `local`, `mysql`, `postgres`. You must use one and only one of these providers.
storage:
  # The encryption key that is used to encrypt sensitive information in the database. Must be a string with a minimum
  # length of 20. Please see the docs if you configure this with an undesirable key and need to change it, you MUST use
  # the CLI to change this in the database if you want to change it from a previously configured value.
  encryption_key: '' # docker-secret

  #
  # Local (Storage Provider)
  #
  # This stores the data in a SQLite3 Database.
  # This is only recommended for lightweight non-stateful installations.
  #
  # Important: Kubernetes (or HA) users must read https://www.authelia.com/t/statelessness
  #
  local:
    # Path to the SQLite3 Database.
    path: '/config/db.sqlite3'


#
# Notification Provider
#
# Notifications are sent to users when they require a password reset, a WebAuthn registration or a TOTP registration.
# The available providers are: filesystem, smtp. You must use only one of these providers.
notifier:
  # You can disable the notifier startup check by setting this to true.
  disable_startup_check: false

  #
  # SMTP (Notification Provider)
  #
  # Use a SMTP server for sending notifications. Authelia uses the PLAIN or LOGIN methods to authenticate.
  # [Security] By default Authelia will:
  #   - force all SMTP connections over TLS including unauthenticated connections
  #      - use the disable_require_tls boolean value to disable this requirement
  #        (only works for unauthenticated connections)
  #   - validate the SMTP server x509 certificate during the TLS handshake against the hosts trusted certificates
  #     (configure in tls section)
  smtp:
    # The address of the SMTP server to connect to in the address common syntax.
    address: 'submissions://mail.infomaniak.com:465'

    # The connection timeout in the duration common syntax.
    timeout: '5 seconds'

    # The username used for SMTP authentication.
    username: 'XXX@ikmail.com'

    # The password used for SMTP authentication.
    # Can also be set using a secret: https://www.authelia.com/c/secrets
    password: 'XXX'

    # The sender is used to is used for the MAIL FROM command and the FROM header.
    # If this is not defined and the username is an email, we use the username as this value. This can either be just
    # an email address or the RFC5322 'Name <email address>' format.
    sender: 'XXX@ikmail.com'

    # HELO/EHLO Identifier. Some SMTP Servers may reject the default of localhost.
    identifier: 'localhost'

    # Subject configuration of the emails sent. {title} is replaced by the text from the notifier.
    subject: '[Authelia ${PERSONAL_DOMAINE_NAME}] {title}'

    # This address is used during the startup check to verify the email configuration is correct.
    # It's not important what it is except if your email server only allows local delivery.
    startup_check_address: 'XXX@ikmail.com'

    # By default we require some form of TLS. This disables this check though is not advised.
    disable_require_tls: false

    # Disables sending HTML formatted emails.
    disable_html_emails: false
