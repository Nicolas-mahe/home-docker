services:
  vaultwarden:
    restart: unless-stopped
    image: docker.io/vaultwarden/server:latest-alpine
    container_name: vaultwarden
    hostname: vaultwarden
    labels:
      diun.enable: true
      diun.watch_repos: true
      traefik.enable: true
      # admin interface
      traefik.http.routers.vaultwarden-admin.tls: true
      traefik.http.routers.vaultwarden-admin.middlewares: authelia@docker
      traefik.http.routers.vaultwarden-admin.entrypoints: websecure
      traefik.http.routers.vaultwarden-admin.rule: Host(`vaultwarden.${PERSONAL_DOMAINE_NAME}`) && PathPrefix(`/admin`) 
      traefik.http.routers.vaultwarden-admin.service: vaultwarden-admin
      traefik.http.services.vaultwarden-admin.loadBalancer.server.port: 80
      # user interface
      traefik.http.routers.vaultwarden.tls: true
      traefik.http.routers.vaultwarden.middlewares: authelia@docker
      traefik.http.routers.vaultwarden.entrypoints: websecure
      traefik.http.routers.vaultwarden.rule: Host(`vaultwarden.${PERSONAL_DOMAINE_NAME}`) && !PathPrefix(`/admin`) 
      traefik.http.routers.vaultwarden.service: vaultwarden
      traefik.http.services.vaultwarden.loadBalancer.server.port: 80
    environment:
      DOMAIN: https://vaultwarden.${PERSONAL_DOMAINE_NAME}
      TZ: Europe/Paris
      ADMIN_TOKEN: ${ADMIN_TOKEN}
    volumes:
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/docker/docker-data/vaultwarden/:/data/
    expose:
      - 80
    networks:
      - webinternal

networks:
  webinternal:
    name: webinternal