services:
  vaultwarden:
    restart: unless-stopped
    image: docker.io/vaultwarden/server:latest-alpine
    container_name: vaultwarden
    hostname: vaultwarden
    labels:
      diun.enable: true
      diun.watch_repos: true
      traefik.enable: true
      traefik.http.routers.vaultwarden.tls: true
      traefik.http.routers.vaultwarden.tls.certresolver: production
      traefik.http.routers.vaultwarden.entrypoints: web, websecure
      traefik.http.routers.vaultwarden.rule: Host(`vaultwarden.${PERSONAL_DOMAINE_NAME}`)
      traefik.http.routers.vaultwarden.service: vaultwarden
      # API
      traefik.http.services.vaultwardenapi.loadBalancer.server.port: 80
      traefik.http.routers.vaultwardenapi.tls: true
      traefik.http.routers.vaultwardenapi.tls.certresolver: production
      traefik.http.routers.vaultwardenapi.middlewares: authentik@docker
      traefik.http.routers.vaultwardenapi.entrypoints: web, websecure
      traefik.http.routers.vaultwardenapi.rule: Host(`vault.${PERSONAL_DOMAINE_NAME}`) && PathPrefix(`/api`) || PathPrefix(`/admin`)
      traefik.http.routers.vaultwardenapi.service: vaultwardenapi
      traefik.http.services.vaultwardenapi.loadBalancer.server.port: 80
    environment:
      DOMAIN: https://vaultwarden.${PERSONAL_DOMAINE_NAME}
      LOG_FILE: /data/vaultwarden.log
      PUID: 1000
      PGID: 1000
      TZ: Europe/Paris
    volumes:
      - /home/docker/home-docker/timezone:/etc/timezone:ro
      - /home/docker/vaultwarden/:/data/
    networks:
      - webinternal

networks:
  webinternal:
    name: webinternal
    internal: true