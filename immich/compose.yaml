services:
  immich-server:
    restart: unless-stopped
    container_name: immich-server
    hostname: immich-server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    labels:
      diun.enable: true
      diun.watch_repos: true
      traefik.enable: true
      traefik.http.routers.immich.tls: true
      traefik.http.routers.immich.middlewares: authelia@docker
      traefik.http.routers.immich.entrypoints: websecure
      traefik.http.routers.immich.rule: Host(`photos.${PERSONAL_DOMAIN_NAME}`)
      traefik.http.routers.immich.service: immich
      traefik.http.services.immich.loadbalancer.server.port: 2283
    env_file:
      - stack.env
    environment:
      IMMICH_CONFIG_FILE: /immich-config.json
      IMMICH_TRUSTED_PROXIES: 172.18.0.0/16
      TZ: Europe/Paris
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/docker/docker-data/immich/library:/data
      - /${RAID_DATA_DIRECTORY:?raid path is required}/partage:/partage
      - /${DOCKER_DATA_DIRECTORY:?data path is required}/docker/docker-data/immich/config.json:/immich-config.json:ro
    depends_on:
      - redis
      - database
    networks:
      - immich
      - webinternal

  immich-machine-learning:
    restart: unless-stopped
    container_name: immich-machine-learning
    hostname: immich-machine-learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    labels:
      diun.enable: true
      diun.watch_repos: true
    environment:
      TZ: Europe/Paris
    env_file:
      - stack.env
    volumes:
      - model-cache:/cache
    networks:
      - immich

  redis:
    restart: unless-stopped
    image:  docker.io/valkey/valkey:${REDIS_IMMICH_VERSION:-8-bookworm}
    container_name: immich-redis
    hostname: immich-redis
    labels:
      diun.enable: true
      diun.watch_repos: true
    environment:
      TZ: Europe/Paris
    volumes:
      - redis:/data
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - immich

  database:
    restart: unless-stopped
    image: ghcr.io/immich-app/postgres:${POSTGRES_IMMICH_VERSION:-14-vectorchord0.4.3-pgvectors0.2.0}
    container_name: immich-postgres
    hostname: immich-postgres
    shm_size: 128mb
    labels:
      diun.enable: true
      diun.watch_repos: true
    environment:
      TZ: Europe/Paris
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - immich

volumes:
  postgres:
  model-cache:
  redis:

networks:
  immich:
    name: immich
  webinternal:
    name: webinternal